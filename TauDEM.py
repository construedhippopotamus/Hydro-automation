"""
# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# TauDEM_all.py
# Created on: 2018-01-20 12:04:03.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
# ---------------------------------------------------------------------------


#next: 

get user input and pass to function to set path.
#check if files exist and prompt user to select new destination if they do
#currently this assumes outlet and dem are both in same folder as outputs - add message to user?
#add message box that says "done"

#docker to package? install TauDEM in docker?

#merge tiny pieces of area with surrounding polygons.

#comment code. standardize names to be used for any project

#changed the following to "path" - see if it works!
#arcpy.env.workspace , arcpy.env.scratchWorkspace

!!!!!!!!!!!!!!!!!!!!! DOES THIS NEED SPATIAL ANALYST CHECKED OUT?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

"""


# Import arcpy module
import arcpy
import ctypes  # An included library with Python install.
import os

# Load required TauDEM toolboxes - change path
arcpy.ImportToolbox("C:/Program Files/TauDEM/TauDEM5Arc/TauDEM Tools.tbx")

# add a message box later
#ctypes.windll.user32.MessageBoxW(0, "Your text", "Your title", 1)

#set working directory and workspaces
path = r"C:\Program Files\TauDEM\Demo"

arcpy.env.scratchWorkspace = path        # orig - can change back"C:\\Users\\jenny.mital\\Documents\\ArcGIS\\Default.gdb"

arcpy.env.workspace = path               # orig - can change back: "C:\\Users\\jenny.mital\\Documents\\ArcGIS\\Default.gdb"


os.chdir(path)

# Local variables:

#INPUT RASTER
cubdem = "cubdem"
#INPUT OUTLET POINT SHAPEFILE
CubGauge_shp = "CubGauge.shp"

#PRODUCTS - DUPLICATES ARE NUMBERED BY STEP IN TUTORIAL
cubdemfel_tif = "cubdemfel.tif"
cubdemsd8_tif = "cubdemsd8.tif"
cubdemp_tif = "cubdemp.tif"
cubdemgord_tif = "cubdemgord.tif"
cubdemplen_tif = "cubdemplen.tif"
cubdemtlen_tif = "cubdemtlen.tif"
cubdemslp_tif = "cubdemslp.tif"
cubdemang_tif = "cubdemang.tif"
cubdemsca_tif = "cubdemsca.tif"
cubdemad8_tif = "cubdemad8.tif"
cubdemssa_tif = "cubdemssa.tif"
cubdemsrc18_tif = "cubdemsrc2.tif"
cubdemord19_tif = "cubdemord19.tif"
cubdemtree19_txt = "cubdemtree19.txt"
cubdemcoord19_txt = "cubdemcoord19.txt"
cubdemnet19_shp = "cubdemnet19.shp"
cubdemw19_tif = "cubdemw19.tif"
cubdemss_tif = "cubdemss.tif"
cubdemsrc_tif = "cubdemsrc.tif"
cubdem_Outletmv = "cubdem_Outletmv.shp"
cubdemss21_tif = "cubdemss21.tif"
cubdemssa21_tif = "cubdemssa21.tif"
cubdemdrp21_txt = "cubdemdrp21.txt"
cubdemsrc21_tif = "cubdemsrc21.tif"
cubdemord22_tif = "cubdemord22.tif"
cubdemtree22_txt = "cubdemtree22.txt"
cubdemcoord22_txt = "cubdemcoord22.txt"
cubdemnet22_shp = "cubdemnet22.shp"
cubdemw22_tif = "cubdemw22.tif"

subwatersheds_shp = "subwatersheds.shp"  #orig - can change back:  r"C:\Program Files\TauDEM\Demo\subwatersheds.shp"

# Process: Pit Remove 3-8
arcpy.PitRemove_TDEM(cubdem, "", "", "8", cubdemfel_tif)

# Process: D8 Flow Directions 9
arcpy.D8FlowDir_TDEM(cubdemfel_tif, "8", cubdemp_tif, cubdemsd8_tif)

# Process: Grid Network 11
arcpy.GridNetwork_TDEM(cubdemp_tif, "8", "", "", "", cubdemgord_tif, cubdemplen_tif, cubdemtlen_tif)

# Process: D-Infinity Flow Directions 12
arcpy.DinfFlowDir_TDEM(cubdemfel_tif, "8", cubdemang_tif, cubdemslp_tif)

# Process: D-Infinity Contributing Area 13
arcpy.AreaDinf_TDEM(cubdemang_tif, "", "", "true", "8", cubdemsca_tif)

# Process: D8 Contributing Area 10
arcpy.D8ContributingArea_TDEM(cubdemp_tif, "", "", "true", "8", cubdemad8_tif)

# Process: Stream Definition By Threshold 14
arcpy.StreamDefByThreshold_TDEM(cubdemad8_tif, "", "100", "8", cubdemsrc_tif)

# Process: Move Outlets To Streams 16
arcpy.MoveOutletsToStreams_TDEM(cubdemp_tif, cubdemsrc_tif, CubGauge_shp, "50", "8", cubdem_Outletmv)

# Process: D8 Contributing Area 17
arcpy.D8ContributingArea_TDEM(cubdemp_tif, cubdem_Outletmv, "", "true", "8", cubdemssa_tif)

# Process: Stream Definition By Threshold 18
arcpy.StreamDefByThreshold_TDEM(cubdemssa_tif, "", "100", "8", cubdemsrc18_tif)

# Process: Stream Reach And Watershed 19
arcpy.StreamReachAndWatershed_TDEM(cubdemfel_tif, cubdemp_tif, cubdemad8_tif, cubdemsrc18_tif, cubdem_Outletmv, "false", "8", cubdemord19_tif, cubdemtree19_txt, cubdemcoord19_txt, cubdemnet19_shp, cubdemw19_tif)

# Process: Peuker Douglas 20
arcpy.PeukerDouglas_TDEM(cubdemfel_tif, "0.4", "0.1", "0.05", "8", cubdemss_tif)

# Process: Peuker Douglas Stream Definition 21. 6th input is #cells tributary needed to form stream.
arcpy.PeukerDouglasStreamDef_TDEM(cubdemfel_tif, cubdemp_tif, "0.4", "0.1", "0.05", "50", "true", cubdem_Outletmv, "", cubdemad8_tif, "8", cubdemss21_tif, cubdemssa21_tif, cubdemsrc21_tif, cubdemdrp21_txt, "true", "5", "500", "10", "true")

# Process: Stream Reach And Watershed 22
arcpy.StreamReachAndWatershed_TDEM(cubdemfel_tif, cubdemp_tif, cubdemad8_tif, cubdemsrc21_tif, cubdem_Outletmv, "false", "8", cubdemord22_tif, cubdemtree22_txt, cubdemcoord22_txt, cubdemnet22_shp, cubdemw22_tif)


# Process: Raster to Polygon
arcpy.RasterToPolygon_conversion(cubdemw22_tif, subwatersheds_shp, "SIMPLIFY", "Value")  #convert raster to polygon

# Process: Add Geometry Attributes
arcpy.AddGeometryAttributes_management(subwatersheds_shp, "AREA", "", "ACRES", "")

#merge polygons with area < XX ac with the largest adjacent polygon 
#http://resources.arcgis.com/en/help/main/10.1/index.html#//00170000005p000000
#1. apply query to select all small polygons.
#2. run eliminate

"""
arcpy.MakeFeatureLayer_management("blockgrp", "blocklayer")
arcpy.SelectLayerByAttribute_management("blocklayer", "NEW_SELECTION", 
                                        '"Area_Sq_Miles" < 0.15')
arcpy.Eliminate_management("blocklayer", "C:/output/output.gdb/eliminate_output", 
                           "LENGTH", '"OBJECTID" = 9')
"""








print "done"
